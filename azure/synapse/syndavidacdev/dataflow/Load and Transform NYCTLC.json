{
	"name": "Load and Transform NYCTLC",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CSV_data_dlssynapsedavidacdev",
						"type": "DatasetReference"
					},
					"name": "YellowTaxiTripRecords"
				},
				{
					"dataset": {
						"referenceName": "CSV_data_dlssynapsedavidacdev",
						"type": "DatasetReference"
					},
					"name": "YellowTaxiLookupZone"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "NYCTLC_YellowTaxiTripRecords",
						"type": "DatasetReference"
					},
					"name": "YellowTripTaxiRecords"
				},
				{
					"dataset": {
						"referenceName": "NYCTLC_SummaryYellowTaxiTripRecords",
						"type": "DatasetReference"
					},
					"name": "SummaryYellowTaxiTripRecords"
				}
			],
			"transformations": [
				{
					"name": "JoinPickupLocation"
				},
				{
					"name": "SelectingAndRenaming"
				},
				{
					"name": "EnsuringDataConsistency"
				},
				{
					"name": "TransformAggData"
				},
				{
					"name": "SelectAggData"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "parameters{\n\tYear as string ('2020')\n}\nsource(output(\n\t\tVendorID as string,\n\t\ttpep_pickup_datetime as string,\n\t\ttpep_dropoff_datetime as string,\n\t\tpassenger_count as string,\n\t\ttrip_distance as string,\n\t\tRatecodeID as string,\n\t\tstore_and_fwd_flag as string,\n\t\tPULocationID as string,\n\t\tDOLocationID as string,\n\t\tpayment_type as string,\n\t\tfare_amount as string,\n\t\textra as string,\n\t\tmta_tax as string,\n\t\ttip_amount as string,\n\t\ttolls_amount as string,\n\t\timprovement_surcharge as string,\n\t\ttotal_amount as string,\n\t\tcongestion_surcharge as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100,\n\twildcardPaths:[(concat('raw/nyctlc/tripdata/', $Year, '/*'))]) ~> YellowTaxiTripRecords\nsource(output(\n\t\tLocationID as string,\n\t\tBorough as string,\n\t\tZone as string,\n\t\tservice_zone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\twildcardPaths:['raw/nyctlc/misc/taxi+_zone_lookup.csv']) ~> YellowTaxiLookupZone\nYellowTaxiTripRecords, YellowTaxiLookupZone join(PULocationID == LocationID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPickupLocation\nJoinPickupLocation select(mapColumn(\n\t\tVendorID,\n\t\tPickup_Datetime = tpep_pickup_datetime,\n\t\tDropoff_Datetime = tpep_dropoff_datetime,\n\t\tPassengerCount = passenger_count,\n\t\tTripDistance = trip_distance,\n\t\tPickupLocationID = PULocationID,\n\t\tPaymentType = payment_type,\n\t\tFareAmount = fare_amount,\n\t\tExtraAmount = extra,\n\t\tMtaTaxAmount = mta_tax,\n\t\tTipAmount = tip_amount,\n\t\tTollsAmount = tolls_amount,\n\t\tImprovementSurchargeAmount = improvement_surcharge,\n\t\tTotalAmount = total_amount,\n\t\tPickupBorough = Borough,\n\t\tPickupZone = Zone\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectingAndRenaming\nSelectingAndRenaming derive(TripDistance = toDecimal(TripDistance),\n\t\tFareAmount = toDecimal(FareAmount),\n\t\tExtraAmount = toDecimal(ExtraAmount),\n\t\tMtaTaxAmount = toDecimal(MtaTaxAmount),\n\t\tTipAmount = toDecimal(TipAmount),\n\t\tTollsAmount = toDecimal(TollsAmount),\n\t\tImprovementSurchargeAmount = toDecimal(ImprovementSurchargeAmount),\n\t\tTotalAmount = toDecimal(TotalAmount),\n\t\tPickup_Datetime = toTimestamp(Pickup_Datetime, 'yyyy-MM-dd HH:mm:ss'),\n\t\tDropoff_Datetime = toTimestamp(Dropoff_Datetime, 'yyyy-MM-dd HH:mm:ss')) ~> EnsuringDataConsistency\nSelectAggData derive(TripDate = toDate(TripDate),\n\t\tPassengerCount = toInteger(PassengerCount)) ~> TransformAggData\nEnsuringDataConsistency select(mapColumn(\n\t\tTripDate = Pickup_Datetime,\n\t\tPassengerCount,\n\t\tTripDistance,\n\t\tFareAmount,\n\t\tTipAmount,\n\t\tTotalAmount,\n\t\tPickupBorough,\n\t\tPickupZone\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAggData\nTransformAggData aggregate(groupBy(TripDate,\n\t\tPickupBorough,\n\t\tPickupZone),\n\tTotalTripCount = count(),\n\t\tTotalPassengerCount = sum(PassengerCount),\n\t\tTotalDistanceTravelled = sum(TripDistance),\n\t\tTotalTipAmount = sum(TipAmount),\n\t\tTotalFareAmount = sum(FareAmount),\n\t\tTotalTripAmount = sum(TotalAmount)) ~> Aggregate1\nEnsuringDataConsistency sink(input(\n\t\tVendorID as string,\n\t\tPickup_Datetime as timestamp,\n\t\tDropoff_Datetime as timestamp,\n\t\tPassengerCount as string,\n\t\tTripDistance as decimal(10,2),\n\t\tPickupLocationID as string,\n\t\tPickupBorough as string,\n\t\tPickupZone as string,\n\t\tPaymentType as string,\n\t\tFareAmount as decimal(10,2),\n\t\tExtraAmount as decimal(10,2),\n\t\tMtaTaxAmount as decimal(10,2),\n\t\tTipAmount as decimal(10,2),\n\t\tTollsAmount as decimal(10,2),\n\t\tImprovementSurchargeAmount as decimal(10,2),\n\t\tTotalAmount as decimal(10,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1) ~> YellowTripTaxiRecords\nAggregate1 sink(input(\n\t\tTripDate as date,\n\t\tPickupBorough as string,\n\t\tPickupZone as string,\n\t\tTotalTripCount as integer,\n\t\tTotalPassengerCount as integer,\n\t\tTotalDistanceTravelled as decimal(18,2),\n\t\tTotalFareAmount as decimal(18,2),\n\t\tTotalTipAmount as decimal(18,2),\n\t\tTotalTripAmount as decimal(18,2)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tstaged: true,\n\tallowCopyCommand: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SummaryYellowTaxiTripRecords"
		}
	}
}